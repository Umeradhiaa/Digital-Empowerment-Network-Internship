# -*- coding: utf-8 -*-
"""DEN Internship Task 4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yz-e5pvosAWNJDNxf76iwNyYAmkSZO4a
"""

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.ensemble import IsolationForest
from sklearn.metrics import classification_report, confusion_matrix

data = pd.read_csv('RT_IOT2022.csv')

data

print(data.info())

data.isnull().sum()

data.columns

le = LabelEncoder()
categorical_columns = ['src_ip', 'src_ip_country_code', 'protocol', 'dst_ip', 'rule_names', 'observation_name', 'source.meta', 'source.name', 'detection_types']
for col in categorical_columns:
    data[col] = le.fit_transform(data[col])

x= data.drop(columns = ['creation_time', 'end_time', 'time'])

x

x['src_ip_country_code'].plot(kind='hist', bins=20)
plt.title('src_ip_country_code')
plt.xlabel('Value')
plt.ylabel('Frequency')
plt.show()

scaler = StandardScaler()
X_scaled = scaler.fit_transform(x)

x_scaled

x_train, x_test = train_test_split(x_scaled, test_size=0.2, random_state=42)

model = IsolationForest(contamination=0.1, random_state=42)
model.fit(x_train)

y_pred_test = model.predict(x_test)

y_pred_test

y_pred_test = [1 if x==1 else 0 for x in y_pred_test]

y_pred_test

y_test = [1]*len(y_pred_test)

y_test

print('Classification Report:')
print(classification_report(y_test, y_pred_test))

conf_matrix = confusion_matrix(y_test, y_pred_test)
print('Confusion Matrix:\n, conf_matrix')